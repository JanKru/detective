"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createModules = void 0;
const module_1 = require("./module");
const traverse_unassigned_file_info_1 = __importDefault(require("../file-info/traverse-unassigned-file-info"));
const throw_if_null_1 = __importDefault(require("../util/throw-if-null"));
const format_modules_1 = require("./format-modules");
const get_1 = __importDefault(require("../util/get"));
const log_1 = require("../log");
const log = (0, log_1.logger)('core.modules.create');
const findClosestModule = (path, moduleInfos) => {
    return (0, throw_if_null_1.default)(moduleInfos
        .filter((moduleInfo) => path.startsWith(moduleInfo.directory))
        .sort((p1, p2) => (p1.directory.length > p2.directory.length ? -1 : 1))
        .at(0), `findClosestModule for ${path}`);
};
const createModules = (fileInfo, existingModules, rootDir, fileInfoMap, getFileInfo) => {
    const moduleInfos = Array.from(existingModules).map((module) => new module_1.Module(module, fileInfoMap, getFileInfo, false));
    moduleInfos.push(new module_1.Module(rootDir, fileInfoMap, getFileInfo, true));
    const moduleInfoMapPerIndexTs = new Map(moduleInfos.map((moduleInfo) => [moduleInfo.path, moduleInfo]));
    const moduleInfoMap = new Map(moduleInfos.map((moduleInfo) => [moduleInfo.directory, moduleInfo]));
    for (const element of (0, traverse_unassigned_file_info_1.default)(fileInfo)) {
        const fi = element.fileInfo;
        if (isFileInfoAModule(fi, existingModules)) {
            (0, get_1.default)(moduleInfoMapPerIndexTs, fi.path).addFileInfo(fi);
        }
        else {
            findClosestModule(fi.path, moduleInfos).addFileInfo(fi);
        }
    }
    const foundModules = Array.from(moduleInfoMap.values());
    log.info((0, format_modules_1.formatModules)(foundModules));
    return foundModules;
};
exports.createModules = createModules;
const isFileInfoAModule = ({ path }, existingModules) => existingModules.has(path);
//# sourceMappingURL=create-modules.js.map